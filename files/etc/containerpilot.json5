{
  consul: 'consul.svc.gaz.gb-home.cns.gorillass.co.uk:8500',
  logging: {
    level: '{{ .LOG_LEVEL }}',
    format: '{{ .LOG_FORMAT }}'  },
  jobs: [
    {
      name: "platform_integration_setup",
      exec: "/usr/local/bin/setdomain.sh"
    },
    {
      name: 'squid-gcp-proxy',
      exec: "/usr/sbin/squid3 -f /etc/squid-gcp-proxy/squid.conf",
      port: "3128",
      health: {
        exec: 'curl http://localhost:3128',
        interval: "5",
        ttl: "5",
        timeout: "1",
      },
      tags: [
        "squid",
        "gcp",
        "proxy"
      ],
          },
    {
      name: "scheduling_status_healthy",
      restarts: "unlimited",
      exec: ["zabbix_sender",
        "-c", "/etc/coprocesses/zabbix/zabbix_agentd.conf",
        "--key", "container.state",
        "--value", "1"],
      when: {
        interval: "10s",
      }
    },
/*  ToDo: sending state=0 when main service is unhealthy
    Leaving this line in for now but feel that this will conflict when trying
    to scale containers. I.e. a process being unhealthy but container still
    running will mean docker scale will be using incorrect deployment.state value
    {
      name: "scheduling_status_unhealthy",
      restarts: "unlimited",
      exec: ["zabbix_sender",
        "-c", "/etc/coprocesses/zabbix/zabbix_agentd.conf",
        "--key", "container.state",
        "--value", "0"],
      when: {
        source: "squid-gcp-proxy",
        once: "unhealthy",
        interval: "10s",
        timeout: "3s"
      }
    },     */
    {
      name: "zabbix_agent",
      exec: ["/usr/sbin/zabbix_agentd", "-fc", "/etc/coprocesses/zabbix/zabbix_agentd.conf"],
      restarts: "unlimited",
      health: {
        exec: 'zabbix_agentd -t agent.ping',
        interval: 30,
        ttl: 60,
        timeout: 5
      },
      when: {
        source: "pre_start",
        once: "exitSuccess"
      }
    },
    {
      name: "post_stop",
      exec: ["zabbix_sender",
             "-c", "/etc/coprocesses/zabbix/zabbix_agentd.conf",
             "--key", "container.state",
             "--value", "0"],
      when: {
        once: "shutdown"
      }
    },
  ]
}
