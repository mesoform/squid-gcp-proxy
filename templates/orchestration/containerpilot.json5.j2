{
  consul: 'localhost:8500',
  logging: {
    level: {% raw %}'{{ .LOG_LEVEL }}'{% endraw %},
    format: {% raw %}'{{ .LOG_FORMAT }}'{% endraw %}
  },
  jobs: [
    {
      name: "platform_integration_setup",
      exec: "/usr/local/bin/setdomain.sh"
    },
{% if pre_start is defined %}
    {
      name: "pre_start",
      exec: '{{ pre_start }}',
      when: {
        source: "platform_integration_setup",
        once: "exitSuccess"
      }
    },
{% endif %}
    {
      name: '{{ project_name }}',
      exec: [
        "{{ command }}"
      ],
{% if service_port is defined %}
      port: "{{ service_port }}",
{% endif %}
      health: {
        exec: '{{ healthcheck }}',
        interval: "{{ healthcheck_interval | default(5) }}",
        ttl: "{{ healthcheck_ttl | default(5) }}",
        timeout: "{{ healthcheck_timeout | default(1) }}",
      },
      tags: [
{% for tag in service_tags %}
{% if not loop.last %}
        "{{ tag }}",
{% else %}
        "{{ tag }}"
{% endif %}
{% endfor %}
      ],
{% if svc_discovery is defined %}
      when: {
        source: "consul_agent",
        once: "healthy"
      }
{% endif %}
    },
{% if event_management is defined %}
    {
      name: "scheduling_status_healthy",
      restarts: "unlimited",
      exec: ["zabbix_sender",
        "-c", "/etc/coprocesses/zabbix/zabbix_agentd.conf",
        "--key", "container.state",
        "--value", "1"],
      when: {
        interval: "10s",
      }
    },
/*  ToDo: sending state=0 when main service is unhealthy
    Leaving this line in for now but feel that this will conflict when trying
    to scale containers. I.e. a process being unhealthy but container still
    running will mean docker scale will be using incorrect deployment.state value
    {
      name: "scheduling_status_unhealthy",
      restarts: "unlimited",
      exec: ["zabbix_sender",
        "-c", "/etc/coprocesses/zabbix/zabbix_agentd.conf",
        "--key", "container.state",
        "--value", "0"],
      when: {
        source: "{{ project_name }}",
        once: "unhealthy",
        interval: "10s",
        timeout: "3s"
      }
    },     */
    {
      name: "zabbix_agent",
      exec: ["/usr/sbin/zabbix_agentd", "-fc", "/etc/coprocesses/zabbix/zabbix_agentd.conf"],
      restarts: "unlimited",
      health: {
        exec: 'zabbix_agentd -t agent.ping',
        interval: 30,
        ttl: 60,
        timeout: 5
      },
{% if pre_start is defined %}
      when: {
        source: "pre_start",
        once: "exitSuccess"
      }
{% else %}
      when: {
        source: "platform_integration_setup",
        once: "exitSuccess"
      }
{% endif %}
    },
    {
      name: "post_stop",
      exec: ["zabbix_sender",
             "-c", "/etc/coprocesses/zabbix/zabbix_agentd.conf",
             "--key", "container.state",
             "--value", "0"],
      when: {
        once: "shutdown"
      }
    },
{% endif %}
    {
      name: "consul_agent",
      restarts: "unlimited",
{% if svc_discovery is defined %}
      exec: [
        "/usr/local/bin/consul", "agent",
        "-config-dir=/config",
        "-data-dir=/tmp",
        "-rejoin",
        "-retry-join", "{% raw %}{{ .SVC_DISCOVERY }}{% endraw %}",
        "-retry-max", "10",
        "-retry-interval", "10s"
      ],
{% else %}
      exec: [
        "/usr/local/bin/consul", "agent",
        "-server",
        "-dev",
        "-join", "localhost"
      ],
{% endif %}
/*      health: {
        exec: "consul join {% raw %}{{ .SVC_DISCOVERY }}{% endraw %}",
        interval: 5,
        ttl: 10
      },
*/
{% if pre_start is defined %}
      when: {
        source: "pre_start",
        once: "exitSuccess"
      }
{% else %}
      when: {
        source: "platform_integration_setup",
        once: "exitSuccess"
      }
{% endif %}
    }
  ]
}
