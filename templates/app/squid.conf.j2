## Google API Proxy
#

## ACL definitions
acl  	gcp   			src  		10.0.1.0/22 # internal GCE subnet
acl  	dockertest		src 		172.19.0.0/16  # Docker overlay network
acl  	to_metadata  	dst 		169.254.169.254 # GCP metadata
acl     sharedsvcs      src     	"{{ app_config_dir }}/sharedsvc-servers.conf"
acl  	SSL_ports 		port 		443
acl  	Safe_ports 		port 		80  # http
acl  	Safe_ports 		port 		443  # https
acl  	Safe_ports 		port 		1025-65535 # unregistered ports
acl  	CONNECT 		method 		CONNECT
acl  	googledomains	dstdomain 	"{{ app_config_dir }}/googledomains.conf"
acl  	googleips 		dst 		"{{ app_config_dir }}/googleips.conf"
acl  	internet 		dst  		all
acl	    dstgoogle		any-of 		googleips googledomains # all google destinations
acl 	has-xff 		req_header 	X-Forwarded-For ^(([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)|(\[([0-9a-f]+)?:([0-9a-f:]+)?:([0-9a-f]+|0-9\.]+)?\])) # requests that have X-Forwarded-For header with a value
{% if downstreams is defined %}
{% for downstream in downstreams %}
acl  	{{ downstream }}		src 		"{{ app_config_dir }}/{{ downstream }}-servers.conf"
{% endfor %}
{% endif %}

#
## Access Permissions
#
## Deny requests to certain unsafe ports
http_access deny !Safe_ports

## Deny CONNECT to other than secure SSL ports
http_access deny CONNECT !SSL_ports

## Only allow cachemgr access from localhost
http_access allow localhost manager
http_access deny manager

## We strongly recommend the following be uncommented to protect innocent
## web applications running on the proxy server who think the only
## one who can access services on "localhost" is a local user
##http_access deny to_localhost

##  permission list
http_access 		allow 	gcp                 dstgoogle
http_access 		allow 	sharedsvcs          dstgoogle
http_access 		allow 	dockertest          dstgoogle
http_access         allow   localhost           dstgoogle
{% if downstreams is defined %}
{% for downstream in downstreams %}
http_access         allow   {{ downstream }}	dstgoogle
{% endfor %}
{% endif %}
http_access 		deny 	to_metadata


## And finally, explicitly deny all other access to this proxy
http_access deny all

## Normally Squid port
http_port {{ service_port }}

## Configuration for reverse proxying
## define backend server(s) to connect to
#cache_peer      /etc/squid/googledomains.conf          parent    80       0  default originserver proxy-only name=googleapipeer
## Access control for another proxy to connect to these server(s)
#cache_peer_access       googleapipeer   allow   fwdproxy
## proxy-to-proxy access control
#proxy_protocol_access   allow   fwdproxy                dstgoogle
#follow_x_forwarded_for  allow   fwdproxy                dstgoogle
## Same but also insist there being downstream proxy headers like X-Forwarded-For
#http_port {{ service_port }} require-proxy-header

#
## LOGGING
#

logfile_rotate 0

# stderr because squid can't write to stdout and cache_log needs a file
cache_log stderr

## default logformat
logformat squid      %ts.%03tu %6tr %>a %Ss/%03>Hs %<st %rm %ru %[un %Sh/%<a %mt

## default logformat using XFF instead of client IP address
logformat squid-xff  %ts.%03tu %6tr %{X-Forwarded-For}>h %Ss/%03>Hs %<st %rm %ru %[un %Sh/%<a %mt

## If no XFF header, use default format
access_log syslog:{{ log_level | lower }} squid !has-xff
## If XFF use XFF format
access_log syslog:{{ log_level | lower }} squid-xff has-xff

## Debug ACLs
#debug_options 28,3 11,3 23,3 55,3 73,3

## don't cache
cache_dir null /tmp
cache deny all

## Set user to run as
cache_effective_user squid

## Coredumps in the first cache dir
coredump_dir /var/spool/squid3

## Disable EUI/MAC lookups
eui_lookup off

#
## Add any of your own refresh_pattern entries above these.
#
refresh_pattern ^ftp:		1440	20%	10080
refresh_pattern ^gopher:	1440	0%	1440
refresh_pattern -i (/cgi-bin/|\?) 0	0%	0
refresh_pattern .		0	20%	4320